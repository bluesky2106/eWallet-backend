version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.14

      # CircleCI redis images available at: https://hub.docker.com/r/circleci/redis/tags
      - image: circleci/redis
        port: 6379:6379 

      # - image: circleci/mysql:8.0.19
      #   environment: # environment variables for primary container
      #     - MYSQL_ALLOW_EMPTY_PASSWORD=true
      #     - MYSQL_ROOT_HOST=%
      #     - MYSQL_USER=ubuntu
      #     - MYSQL_PASSWORD=ubuntu
      #     - MYSQL_DATABASE=itv

    # resource_class: medium
    working_directory: /go/src/github.com/bluesky2106/eWallet-backend

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory

      # Load packages from cache (/go/pkg/mod)
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
    
      - run: GO111MODULE="on" go mod tidy

      # Store cache in the /go/pkg/mod directory
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      - run:
          name: Run unit tests
          command: |
            go test -timeout 9000s -cover -a -v ./...
workflows:
  version: 2
  build_and_test:
    jobs:
      - build