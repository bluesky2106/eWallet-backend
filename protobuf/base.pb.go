// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

package protobufpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Message represents what is the purpose of object
type Message int32

const (
	Message_MESSAGE_INVALID              Message = 0
	Message_MESSAGE_CREATE_USER          Message = 1
	Message_MESSAGE_READ_USER_BY_EMAIL   Message = 2
	Message_MESSAGE_READ_USER_BY_ID      Message = 3
	Message_MESSAGE_UPDATE_USER          Message = 4
	Message_MESSAGE_CHANGE_PWD_USER      Message = 5
	Message_MESSAGE_DELETE_USER_BY_ID    Message = 6
	Message_MESSAGE_DELETE_USER_BY_EMAIL Message = 7
	Message_MESSAGE_CREATE_PRODUCT       Message = 10
)

var Message_name = map[int32]string{
	0:  "MESSAGE_INVALID",
	1:  "MESSAGE_CREATE_USER",
	2:  "MESSAGE_READ_USER_BY_EMAIL",
	3:  "MESSAGE_READ_USER_BY_ID",
	4:  "MESSAGE_UPDATE_USER",
	5:  "MESSAGE_CHANGE_PWD_USER",
	6:  "MESSAGE_DELETE_USER_BY_ID",
	7:  "MESSAGE_DELETE_USER_BY_EMAIL",
	10: "MESSAGE_CREATE_PRODUCT",
}

var Message_value = map[string]int32{
	"MESSAGE_INVALID":              0,
	"MESSAGE_CREATE_USER":          1,
	"MESSAGE_READ_USER_BY_EMAIL":   2,
	"MESSAGE_READ_USER_BY_ID":      3,
	"MESSAGE_UPDATE_USER":          4,
	"MESSAGE_CHANGE_PWD_USER":      5,
	"MESSAGE_DELETE_USER_BY_ID":    6,
	"MESSAGE_DELETE_USER_BY_EMAIL": 7,
	"MESSAGE_CREATE_PRODUCT":       10,
}

func (x Message) String() string {
	return proto.EnumName(Message_name, int32(x))
}

func (Message) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

// Object represents table/struct
//
// [USER], [USER PWD], [WALLET], [MARKET], [ASSET], and [TNX]
type Object int32

const (
	Object_OBJECT_INVALID       Object = 0
	Object_OBJECT_USER          Object = 1
	Object_OBJECT_PRODUCT       Object = 2
	Object_OBJECT_PRODUCT_GROUP Object = 3
	Object_OBJECT_UNIT          Object = 4
)

var Object_name = map[int32]string{
	0: "OBJECT_INVALID",
	1: "OBJECT_USER",
	2: "OBJECT_PRODUCT",
	3: "OBJECT_PRODUCT_GROUP",
	4: "OBJECT_UNIT",
}

var Object_value = map[string]int32{
	"OBJECT_INVALID":       0,
	"OBJECT_USER":          1,
	"OBJECT_PRODUCT":       2,
	"OBJECT_PRODUCT_GROUP": 3,
	"OBJECT_UNIT":          4,
}

func (x Object) String() string {
	return proto.EnumName(Object_name, int32(x))
}

func (Object) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{1}
}

// Action represents:
//
// STORE, QUERY
type Action int32

const (
	Action_ACTION_INVALID Action = 0
	Action_ACTION_CREATE  Action = 1
	Action_ACTION_READ    Action = 2
	Action_ACTION_UPDATE  Action = 3
	Action_ACTION_DELETE  Action = 4
)

var Action_name = map[int32]string{
	0: "ACTION_INVALID",
	1: "ACTION_CREATE",
	2: "ACTION_READ",
	3: "ACTION_UPDATE",
	4: "ACTION_DELETE",
}

var Action_value = map[string]int32{
	"ACTION_INVALID": 0,
	"ACTION_CREATE":  1,
	"ACTION_READ":    2,
	"ACTION_UPDATE":  3,
	"ACTION_DELETE":  4,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{2}
}

// Ex:
//
// [action]   ----  [object]   -----  [message]
// query             wallet           user_wallet
type BaseReq struct {
	Action               Action   `protobuf:"varint,1,opt,name=action,proto3,enum=protobuf.Action" json:"action,omitempty"`
	ObjectType           Object   `protobuf:"varint,2,opt,name=object_type,json=objectType,proto3,enum=protobuf.Object" json:"object_type,omitempty"`
	Message              Message  `protobuf:"varint,3,opt,name=message,proto3,enum=protobuf.Message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseReq) Reset()         { *m = BaseReq{} }
func (m *BaseReq) String() string { return proto.CompactTextString(m) }
func (*BaseReq) ProtoMessage()    {}
func (*BaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

func (m *BaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseReq.Unmarshal(m, b)
}
func (m *BaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseReq.Marshal(b, m, deterministic)
}
func (m *BaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseReq.Merge(m, src)
}
func (m *BaseReq) XXX_Size() int {
	return xxx_messageInfo_BaseReq.Size(m)
}
func (m *BaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_BaseReq proto.InternalMessageInfo

func (m *BaseReq) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_ACTION_INVALID
}

func (m *BaseReq) GetObjectType() Object {
	if m != nil {
		return m.ObjectType
	}
	return Object_OBJECT_INVALID
}

func (m *BaseReq) GetMessage() Message {
	if m != nil {
		return m.Message
	}
	return Message_MESSAGE_INVALID
}

func init() {
	proto.RegisterEnum("protobuf.Message", Message_name, Message_value)
	proto.RegisterEnum("protobuf.Object", Object_name, Object_value)
	proto.RegisterEnum("protobuf.Action", Action_name, Action_value)
	proto.RegisterType((*BaseReq)(nil), "protobuf.BaseReq")
}

func init() {
	proto.RegisterFile("base.proto", fileDescriptor_db1b6b0986796150)
}

var fileDescriptor_db1b6b0986796150 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xdf, 0x8e, 0x93, 0x40,
	0x14, 0xc6, 0x05, 0x2a, 0xe8, 0xa9, 0xb6, 0xd3, 0xa9, 0xb1, 0x58, 0xff, 0xa4, 0xf1, 0xc6, 0xa6,
	0x26, 0x4d, 0xd4, 0x27, 0x18, 0x60, 0x52, 0x31, 0x2d, 0x90, 0x29, 0x68, 0xf4, 0x86, 0x40, 0x33,
	0x35, 0xbb, 0xd9, 0x2e, 0xec, 0xc2, 0x5e, 0xf4, 0x09, 0xf6, 0x01, 0xf6, 0x85, 0x37, 0x30, 0x43,
	0xcb, 0x36, 0xbb, 0x57, 0xc0, 0xef, 0xfb, 0xce, 0xc7, 0x9c, 0x33, 0x07, 0x20, 0x4d, 0x0a, 0x3e,
	0xcf, 0xaf, 0xb3, 0x32, 0xc3, 0x2f, 0xea, 0x47, 0x7a, 0xb3, 0xfd, 0x7c, 0xa7, 0x80, 0x61, 0x25,
	0x05, 0x67, 0xfc, 0x0a, 0x4f, 0x41, 0x4f, 0x36, 0xe5, 0x59, 0x76, 0x69, 0x2a, 0x13, 0x65, 0xda,
	0xfb, 0x8e, 0xe6, 0x8d, 0x6d, 0x4e, 0x6a, 0xce, 0xa4, 0x8e, 0xbf, 0x41, 0x37, 0x4b, 0xcf, 0xf9,
	0xa6, 0x8c, 0xcb, 0x7d, 0xce, 0x4d, 0xf5, 0xd4, 0xee, 0xd7, 0x22, 0x03, 0x61, 0x0a, 0xf7, 0x39,
	0xc7, 0x5f, 0xc1, 0xd8, 0xf1, 0xa2, 0x48, 0xfe, 0x73, 0x53, 0xab, 0xed, 0x83, 0xa3, 0x7d, 0x25,
	0x04, 0xd6, 0x38, 0x66, 0xb7, 0x2a, 0x18, 0x12, 0xe2, 0x21, 0xf4, 0x57, 0x74, 0xbd, 0x26, 0x0b,
	0x1a, 0xbb, 0xde, 0x6f, 0xb2, 0x74, 0x1d, 0xf4, 0x0c, 0x8f, 0x60, 0xd8, 0x40, 0x9b, 0x51, 0x12,
	0xd2, 0x38, 0x5a, 0x53, 0x86, 0x14, 0xfc, 0x09, 0xc6, 0x8d, 0xc0, 0x28, 0x71, 0x6a, 0x1c, 0x5b,
	0x7f, 0x63, 0xba, 0x22, 0xee, 0x12, 0xa9, 0xf8, 0x3d, 0x8c, 0x1e, 0xd5, 0x5d, 0x07, 0x69, 0xed,
	0xd4, 0x28, 0x70, 0x0e, 0xa9, 0x9d, 0x76, 0x95, 0xfd, 0x93, 0x78, 0x0b, 0x1a, 0x07, 0x7f, 0x44,
	0x2d, 0x7a, 0x8e, 0x3f, 0xc2, 0xbb, 0x46, 0x74, 0xe8, 0x92, 0xca, 0x2a, 0x19, 0xaa, 0xe3, 0x09,
	0x7c, 0x78, 0x42, 0x16, 0x67, 0x32, 0xf0, 0x18, 0xde, 0x9e, 0x34, 0x13, 0x30, 0xdf, 0x89, 0xec,
	0x10, 0xc1, 0xec, 0x02, 0x74, 0x31, 0x4c, 0x8c, 0xa1, 0xe7, 0x5b, 0xbf, 0xa8, 0x1d, 0xb6, 0xc6,
	0xd0, 0x87, 0xae, 0x64, 0xb2, 0xfd, 0xa3, 0xa9, 0x89, 0x50, 0xb1, 0x09, 0x6f, 0x1e, 0xb2, 0x78,
	0xc1, 0xfc, 0x28, 0x40, 0x5a, 0xbb, 0xdc, 0x73, 0x43, 0xd4, 0x99, 0x6d, 0x41, 0x17, 0x37, 0x5d,
	0x05, 0x11, 0x3b, 0x74, 0x7d, 0xaf, 0xf5, 0xb7, 0x01, 0xbc, 0x96, 0x4c, 0x1c, 0x13, 0x29, 0x55,
	0x82, 0x44, 0xd5, 0x34, 0x91, 0xda, 0xf2, 0x88, 0x09, 0x22, 0xad, 0x85, 0x44, 0xff, 0xa8, 0x63,
	0x7d, 0x81, 0x57, 0x9b, 0x6c, 0x77, 0x58, 0x00, 0xeb, 0x65, 0xb5, 0x82, 0x41, 0xf5, 0x15, 0x28,
	0xff, 0xa0, 0xc1, 0x79, 0x9a, 0xea, 0xf5, 0xfb, 0x8f, 0xfb, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe6,
	0x69, 0x33, 0x9e, 0xbd, 0x02, 0x00, 0x00,
}
